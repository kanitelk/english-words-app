{"version":3,"sources":["components/Card/index.jsx","components/Cards/index.jsx","components/AddCard/index.jsx","components/App/index.jsx","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","content","sourceText","contentType","show","toggleContent","bind","assertThisInitialized","deleteCard","translation","setState","_this$props","theme","react_default","a","createElement","className","concat","color","onClick","onDoubleClick","Component","Cards","cardsNumber","data","length","anotherCardsNumber","Math","ceil","Fragment","sort","b","map","elem","index","components_Card","key","slice","AddCard","showForm","renderForm","submitForm","e","preventDefault","card","title","value","console","log","add","_this2","onSubmit","type","ref","el","placeholder","selected","DATA_URL","App","cards","getData","_callee","regenerator_default","wrap","_context","prev","next","fetch","sent","json","split","stop","componentDidMount","addCard","prevState","toConsumableArray","date","Date","day","getDate","month","toLocaleString","class","components_AddCard","components_Cards","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d00f9905.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      content: this.props.sourceText,\r\n      contentType: false, //0 - sourse text, 1 - translation\r\n      show: true\r\n    }\r\n    this.toggleContent = this.toggleContent.bind(this);\r\n    this.deleteCard = this.deleteCard.bind(this);\r\n  }\r\n\r\n  toggleContent () { //Переключение перевода\r\n    let content;\r\n    if (!this.state.contentType) content = this.props.translation\r\n    else content = this.props.sourceText;\r\n\r\n    this.setState({\r\n      content: content,\r\n      contentType: !this.state.contentType\r\n    })\r\n  }\r\n\r\n  deleteCard () {\r\n    this.setState({\r\n      show: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { theme, sourceText, translation } = this.props;\r\n    if (this.state.show) return (\r\n      <div className={`Card ${this.props.color}`} onClick={this.toggleContent} onDoubleClick={this.deleteCard}>\r\n        <p><strong>{theme}</strong></p>\r\n        <p>{this.state.content}</p>\r\n      </div>\r\n    ); \r\n    else return null;\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from '../Card'\r\nimport './style.scss';\r\n\r\nclass Cards extends Component {\r\n  render() {\r\n    const cardsNumber = this.props.data.length; //Нужно для распределения количества карточек в столбцах\r\n    const anotherCardsNumber = Math.ceil((cardsNumber-5)/2);\r\n\r\n    return(\r\n      <>\r\n        <div className=\"Cards-container\">\r\n          <div className=\"Cards-left\">\r\n            {this.props.data\r\n              .sort((a, b) => {\r\n                if (a.length > b.length) return -1;\r\n                if (a.length < b.length) return 1;\r\n              })\r\n              .map((elem, index) => <Card key={index} theme={elem.theme} sourceText={elem.sourceText} translation={elem.translation} color={elem.color} />)\r\n              .slice(0,5)}\r\n          </div>\r\n          <div className=\"Cards-center\">\r\n            {this.props.data\r\n              .sort((a, b) => {\r\n                if (a.length > b.length) return -1;\r\n                if (a.length < b.length) return 1;\r\n              })\r\n              .map((elem, index) => <Card key={index} theme={elem.theme} sourceText={elem.sourceText} translation={elem.translation} color={elem.color} />)\r\n              .slice(5, anotherCardsNumber+5)}\r\n          </div>\r\n          <div className=\"Cards-right\">\r\n            {this.props.data\r\n              .sort((a, b) => {\r\n                if (a.length > b.length) return -1;\r\n                if (a.length < b.length) return 1;\r\n              })\r\n              .map((elem, index) => <Card key={index} theme={elem.theme} sourceText={elem.sourceText} translation={elem.translation} color={elem.color} />)\r\n              .slice(5 + anotherCardsNumber)}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cards;","import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass AddCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showForm: false\r\n    }\r\n    this.renderForm = this.renderForm.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  renderForm () {\r\n    this.setState({\r\n      showForm: !this.state.showForm\r\n    })\r\n  }\r\n\r\n  submitForm (e) {\r\n    e.preventDefault();\r\n    let card = {\r\n      theme: this.title.value,\r\n      sourceText: this.sourceText.value,\r\n      translation: this.translation.value,\r\n      color: this.color.value,\r\n    }\r\n    this.setState({\r\n      showForm: false\r\n    })\r\n    console.log(card);\r\n    this.props.add(card);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <>\r\n        {!this.state.showForm && <button className=\"add-btn\" onClick={this.renderForm}>Add card</button>}\r\n        {this.state.showForm && \r\n          <>\r\n            <form className=\"addform\" onSubmit={this.submitForm}>\r\n              <input type=\"text\" ref={el => this.title = el} placeholder=\"Title...\" />\r\n            <input type=\"text\" ref={el => this.sourceText = el} placeholder=\"SourceText...\" />\r\n              <input type=\"text\" ref={el => this.translation = el} placeholder=\"Translation...\" />\r\n              <select ref={el => this.color = el}>\r\n                <option selected value=\"\">Color</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"aqua\">Aqua</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"\">Default</option>\r\n              </select>\r\n\r\n              <div className=\"button-area\">\r\n                <button className=\"add-btn\" onClick={this.renderForm}>Close form</button>\r\n                <button type=\"submit\" className=\"add-btn\" value=\"submit\">Add!</button>\r\n              </div>\r\n            </form>\r\n          </>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddCard;","import React, { Component } from 'react';\nimport Cards from '../Cards';\nimport AddCard from '../AddCard'\nimport './style.scss'\n\nconst DATA_URL = './Phrases.json';\n\nclass App extends Component {\n  state = {\n    cards: []\n  }\n\n  getData = async() => { //Получаем данные из JSON\n    const data = await fetch(DATA_URL);\n    let cards = await data.json();\n\n    cards.map((elem) => { //Считаем количество слов строке\n      elem.length = elem.sourceText.split(\" \").length;\n      return elem;\n    })\n    \n    this.setState({\n      cards\n    })\n  }\n\n  componentDidMount = () => {\n    this.getData();\n  }\n\n  addCard = (card) => {\n    let cards =\n    this.setState(prevState => ({\n      cards: [...prevState.cards, card]\n    }))\n  }\n\n  render() {\n    let date = new Date;\n    let day = date.getDate(); // Получаем число и месяц\n    let month = date.toLocaleString('en-us', { month: 'long' }).slice(0,3);\n\n    return (\n      <>\n        <div className=\"header-container\">\n          <div className=\"date\">\n            <h2>{day}</h2>\n            <p>{month}</p>\n          </div>\n            <h1 class=\"header-line\">New phrases for today</h1>\n          <AddCard add={this.addCard} />\n        </div>\n        <Cards data={this.state.cards}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}